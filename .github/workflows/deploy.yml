name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

  e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-20.04
    needs: unit-tests

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Instal Playwright deps
        run: npx playwright install --with-deps

      - name: Run e2e Playwright tests
        env:
          CI: 1
          BASE_URL: http://localhost:3000
          DEBUG: pw:browser,pw:api
          VITE_UNSPLASH_CLIENT_ID: ${{ secrets.UNSPLASH_CLIENT_ID }}
          VITE_UNSPLASH_API_URL: ${{ secrets.UNSPLASH_API_URL }}
        run: npm run test:e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-20.04
    needs: [e2e-tests, unit-tests]
    if: ${{ needs.unit-tests.result == 'success' && needs.e2e-tests.result == 'success' }}

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npm install -g vercel
          vercel --prod --token $VERCEL_TOKEN
